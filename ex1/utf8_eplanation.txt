//Ariel Elbaz- 213073497//

  
UTF – 8 ENCODING

הסבר כללי: 
 UTF-8 או במילים אחרות 8-bit Unicode Transformation Format , הינו בין הקידודים המפורסמים ביותר בעולם האינטרנט שיש  כיום .
ראשית נרצה להסביר קודם מה זה  Unicodeומה המשמעות שלו.
Unicode  הינו סטדנרט שבא לתת פתרון לבעיה שנוצרה שהיא האינטרנט, מכיוון שלא היו קידודים שיכולים לקודד על כל מערכת באותו האופן ולכן היה צורך במלא קידודים שונים שגרמו לסתירות מכך שלא היה לכל תו ייצוג אחד בינארי .
Unicode מקצה לנו מספר מיוחד לכל תו לא משנה באיזה מערכת או שפה אנו נמצאים הוא נותן מענה לבעיה הרחבה האינטרנט. 
יוניקוד לא מסביר איך יש לייצג מספר זה במחשב. צריך שיטה שבאמצעותה ניקח את המספר המייצג את התו ונשמור אותו במחשב בתור בית אחד או יותר  ברצף.
ולכן סוף כל סוף נתן פתרון לבעיות הנ"ל ונציג את הקידוד המפורסם     UTF-8  אשר נותן מענה לכך שאנו יכולים לעבור מייצוג מספרי לייצוג שהמחשב יכול להבין (בתים) . 


הקידוד הינו בעל אורך משתנה כלומר אם נתון לנו תו מסויים או אימוגי או כל דבר שאפשר לייצג אותו.
ניתן לקרוא לדבר שמייצגים grapheme , דבר שמתפצל למה שנקרא code points – ערך מספרי שמתאים לתו מסוים ביוניקוד.
 UTF -8 יכול לתמוך בקידוד של 2 בחזקת 31 תווים כלומר 6 בתים איך בעיקרון ישנה קונבנציה שמגבילה ל4 בתים כלומר 2 בחזקת21  תווים.
לאחר מכן הערך המספרי הזה מתפרק לבינארית וזהו תהליך הקידוד.
נשים לב כי הבייט הראשון כלומר ה8 ביטים הראשונים שזה בבסיס עשרוני 128  כלומר כל הcode-point  מהערך 0-127 שמורים לקידוד הASCII וכך אנו יכולים לייצג את כל התווים בשפה האנגלית. 
כל שאר הערכים המספרים החל מ128 ניתנים לייצוג את שאר התווים שדרוש בשימוש ב2-4 בתים 
נשים לב כי ייצוג זה הוא בעל אורך משתנה , כלומר זה תלוי מה אנו רוצים לייצג ולפי זה נקבע הגודל של הייצוג של כל תו ולא שלכל תו יש גודל קבוע !!

--
תהליך  הייצוג : 
כל קידוד מתאים כל תו ביוניקוד  למחרוזת בינארית ולהפך , או יותר מפורט ממיר כל code point שמייצג תו ביוניקוד לסט בין 1-4 בתים.
1.אם התווים בטווח המספרים 0-127 אנו יכול לייצג אותם בביית אחד בו הmsb =0 ולכן יש גם תאימות לאחור לקידוד הASCII .
2.אם הערך המספרי של התווים גדול יותר מ127 אנו נייצג את התווים באמצעות 2-4 בתים והMSB=1   בכל ביית.
3.כל תחילת בית מגדיר את מספר הבתים שייצגו את התו לדוגמא אם 3 תווים אז הבית יתחיל ב1110 4 בתים 11110 וכו.. ושאר 6 הביטים מייצגים את שאר הקידוד
4.לאחר מכן כל בית אחרי הבית הראשון מתחילים ב10 שמייצג שזה כבר לא הבית הראשון אלה בית המשך.
על מנת להבדיל בין בית שמייצג תו באסקי לבין בית שמייצג תו אחר בודד , כל בית שהוא לא הראשון מתחיל ב10.

מכיוון שהקידוד הוא בעל אורך משתנה של בתים ומכיוון שיש את הסיביות בתחילת כל בית שנותנות לנו אינדיקציה על הייצוג של התו , גורם לקידוד להיות אמין וחסכוני במיוחד!!!
הקשר בין utf-8  לאינדיאניות – מכיוון שקידוד זה הינו קידוד בעל אורך משתנה שיכול לייצג מבית 1 עד ל6 בתים לייצוג של 31 סיביות/ ביטים .   לייצוג של הבתים אין שום קשר לארכיטקטורה של המעבד , יש את האלגוריתם הספציפי לקידוד שתמיד מקודד מספר לבתים ולהפך באותו ההסדר לא קשור על איזה מעבד מקודדים או הופכים מביטים לערך מספרי.

לכן לסיכום היתרונות של קידוד זה שהינו חסכוני במיוחד בזיכרון ( יש יחס לASCIi)     ולא משכפלים קבצים באנגלית בגודל לשווא.
הקידוד נחשב אמין מכיוון שאפשר להגיד שיש פונקצייה הפיכה בין הערך המספרי לבין הייצוג שלו בבתים כי בוודאות הפלט שהקידוד יביא והקלט הוא אותו דבר על כל מכונה שבו נקודד בה באמצעות הקידוד.

כעת נראה שלושה דוגמאות לקידוד באורך שונה ונראה כיצד לקודד אותו ואיך לפענח אותו מבתים לערך מספרי לתו.

דוגמא ראשונה:
נתחיל מתו בגודל בית 1  התו A :
נשים לב כי הערך המספר של A הינו 41 כלומר הCode-point   הינו בערך ערך חיובי unsigned 
בין 0 לבין 127    ולכן נשתמש בבית 1 שבו הmsb=0 כעת נשים לב כי הייצוג של התו הוא כמו הייצוג שלו לפי הASCII : 01000001 
0-	הmsb ושאר 7 הביטים הן לקידוד הASCII שמקודד ב7 ביטים.
על מנת לפענח את המחרוזת הבניארית בחזרה נראה כי הMSB כבוי ולכן מדובר בקידוד ASCII שמייצג את האותיות בשפה האנגלית נסתכל על שאר 7 הביטים ונחזיר בחזרה לפי טבלת האסקי שבה 41 זה האות  , A  וכך פיענחנו את המחרוזת הבינארית לתו שאותה היא מייצגת.
דוגמא שנייה  :
נקודד לדוגמא את האות "ב" שבשפה העברית שמיוצגת על ידי 2 בתים , כעת נשים לב שהCode-point  של האות הינו הערך המספרי  1489 ובhex-05D1 
האות נמצאת בטווח המספרי 128-1920 ולכן נקודד אותה על ידי 2 בתים.
הבית הראשון יראה כך :  הוא יתחיל ב110 כי יש 2 בתים ואז 0 לפי האלגוריתם 
הבית השני יתחיל ב10 שמסמן שהוא המשך של הבית הראשון.
לאחר מכן מכיוון שהמספר שהאות ב מייצגת הוא  05D1x0 יש לנו 11 סיביות פנויות ונכתוב את המספר בבינארית על ידי ה11 הסיביות האלה שזה : 10111-01001
כעת סה"כ שני הבתים יראו כך :11010111-1001001 כדרוש.
על מנת לפענח את המחרוזת הבינארית נסתכל על הביטים  בביית הראשון ונראה שהם  110
כאשר הגענו ל0 זאת אומרת שזהו פה אנו יודעים שהמספר מיוצג ב2 בתים ואז נותר לנו 5 ביטים מהבית הראשון ולגבי הבית השני שני הביטים הראשונים שלו יהיו 10 ולכן נותר לנו סהכ 11 ביטים בבינארית שאותם נמיר בחזרה לערך המספרי ואז נסתכל על טבלת היוניקוד ונדע מה התו שאנו מייצגים.

דוגמא שלישית :
נסתכל על התו : !? שמיוצג בשלושה בתים מכיוון שהערך המספרי שלו הינו :
2048 ולכן אנו צריכים 3 בתים על מנת לייצג אותו
הייצוג יהיה 11100010:10000001:10001000
ארבעת הביטים הראשונים בביית הראשונים מסמלים שהמספר מיוצג ב3 ביתים ולאחר מכן בבתים 2 ו3 הבית מתחיל ב10 ונותר לנו סהכ 4+6+6= 16 ביטים לייצג את התו .
נייצג את התו לפי היוניקוד בבינארית ונכניס ל16 הביטים וכך הצלחנו לקודד את התו.
הפיענוח יתבצע אותו דבר בדומה לדוגמאות הקודמות , נחלץ את מספר הבתים ולאחר מכן נחלץ את הערך המספרי מהמחרוזות הבינארית מ16 הביטים הנותרים ונביט בטבלת היוניקוד ונקבל את התו הדרוש.


